services:
  backend:
    build:
      context: ./backend
    ports: 
      - "8000:8000"
    env_file:
      - ./backend/.env
    depends_on:
      - db
      - frontend
    volumes:
      - ./templates:/app/templates
      - ./scans:/app/scans
      - ./reports:/app/scans

  frontend:
    build:
      context: ./frontend
    ports:
      - "8080:8080"

  db:
    image: postgres:17.2
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: app-db
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5442:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data/pgdata
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
    tty: true


networks:
  app-network:

volumes:
  pgdata:
    driver: local
