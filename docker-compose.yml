services:
  backend:
    build:
      context: ./backend
    ports: 
      - "${BACKEND_PORT}:8080"
    environment:
      DB_NAME:
    depends_on:
      - db
      - frontend
  frontend:
    build:
      context: ./frontend
    ports:
      - "${FRONTEND_PORT}:8080"
  db:
    image: postgres:17.2
    restart: unless-stopped
    container_name: dark-molecule-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "${POSTGRES_PORT}"
    volumes:
      - ./pgdata:/var/lib/postgresql/data/pgdata
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 5
    tty: true


networks:
  dark-molecule-network:

volumes:
  pgdata:
    driver: local